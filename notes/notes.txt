Librosa:
- tempo octave-error: bpm estimate off by a constant factor
    - Example: Commix Be True, high-bpm DNB in the range of 160-180 is estimated at half-tempo at ~86
    - https://stackoverflow.com/questions/61621282/how-can-we-improve-tempo-detection-accuracy-in-librosa

Essentia:
- Open-source music research from MTG (Music Technology Group) in Barcelona
- https://essentia.upf.edu/machine_learning.html#using-pre-trained-tensorflow-models
- https://essentia.upf.edu/models.html#essentia-models
- https://essentia.upf.edu/machine_learning.html
- https://pypi.org/project/essentia-tensorflow/
- Genre Discogs400 TF Model Demo: https://replicate.com/mtg/effnet-discogs
- More advanced (C++) bpm detector than librosa
- https://essentia.upf.edu/tutorial_rhythm_beatdetection.html

Matplotlib:
-Threading issues: GUI not on main thread usually fails and crashes
- Error: UserWarning: Starting a Matplotlib GUI outside of the main thread will likely fail.
         NSInternalInconsistencyException', reason: 'NSWindow drag regions should only be invalidated on the Main Thread!
- Solution: matplotlib.pyplot.switch_backend('Agg') so MacOS doesn't create and destroy invisible plot windows

tempfile: 
- create temporary directories to store files for Flask to serve to client
- Filename issue where foreign characters like Chinese/Japanese characters
    - Not a result of JSONify ASCII encoding over UTF-8, but due to python's secure_filename removing spaces + other

yt-dlp:
- Output path expects path to dir that isn't temporary
    - Solution: temp_dir.name with os.join instead of temp_dir alone
- JavaScript/Flask integration to download in browser
    - fetch to Flask route
    - create blob/temp url with JS

TensorFlow:
- https://www.reddit.com/r/cscareerquestions/comments/1dhrdv2/are_ppl_abusing_ai_titles/
- EffNet CNN by Essentia
- Train own model on small dataset
    - try to overfit on niche genres not listed in Discogs 400
    - Shibuya-kei, J-shoegaze, J-Pop (City pop)

- Steps to train a model for genre classification:
    1. Extract audio features using librosa, create data csv
        - Features include: MFCCs, chroma, spectral contrast
    2. Preprocess data: normalize and label 0 and 1 for target genre
        - In this case, electronic DnB and jungle 
    3. Split data in training/test set
        - Dataset is too small? 
    4. Regularization to prevent overfit
    5. Compile, train, evaluate model

Flask:
- flask run & to open in background and write a command to auto-open tab
    - lsof -i :5000
    - kill -9 PID

Render:
- Every Render web service must bind to a port on host 0.0.0.0 to serve HTTP requests
if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))  # Default to port 5000 if PORT not set
    app.run(host='0.0.0.0', port=port)

Jupyter:
- jupyter lab
- http://localhost:8888/lab
%matplotlib inline

Node/Homebrew:
    - Oh my god
    - Shadcn requires Tailwind
    - Tailwind requires Node 20.19.0 || >= 22.12.0
        - use nvm to change version
    - Homebrew doesn't support MacOS Monterey
        - no official bottles -> build from source -> i have no storage
    - Vite/Tailwind arghghghhhh

Tailwind:
    Prettier:
        npx prettier --write src/  
        - format classnames for Tailwind
    - Tailwind 4 butchered hover apparently

Tauri:
    npm run tauri dev